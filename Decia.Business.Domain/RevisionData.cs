using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Decia.Business.Common;

namespace Decia.Business.Domain
{
    public class RevisionData
    {
        public const long EarliestRevisionNumber = RevisionChain.EarliestRevisionNumber;

        #region Constructors

        public RevisionData()
        {
            ProjectGuid = Guid.Empty;
            RevisionNumber_Current = EarliestRevisionNumber;
            RevisionNumber_BasedOn = null;
            AutoGenerated_RevisionType_Untyped = null;
        }

        public RevisionData(Guid projectGuid, long revisionNumber_Current, long? revisionNumber_BasedOn, AutoGeneratedRevisionType? autoGeneratedRevisionType)
        {
            ProjectGuid = projectGuid;
            RevisionNumber_Current = revisionNumber_Current;
            RevisionNumber_BasedOn = revisionNumber_BasedOn;
            AutoGenerated_RevisionType_Untyped = autoGeneratedRevisionType.GetAsInt();
        }

        #endregion

        #region Properties

        public Guid ProjectGuid { get; set; }
        public long RevisionNumber_Current { get; set; }
        public long? RevisionNumber_BasedOn { get; set; }
        public int? AutoGenerated_RevisionType_Untyped { get; set; }

        public long RevisionNumber_BasedOn_NonNull { get { return (RevisionNumber_BasedOn.HasValue) ? RevisionNumber_BasedOn.Value : EarliestRevisionNumber; } }
        public AutoGeneratedRevisionType? AutoGenerated_RevisionType { get { return AutoGenerated_RevisionType_Untyped.GetAsEnum<AutoGeneratedRevisionType>(); } }

        #endregion
    }

    public static class RevisionDataUtils
    {
        #region Methods

        public static bool IsValid(this RevisionData revisionData)
        {
            if (revisionData == null)
            { return false; }
            if (revisionData.ProjectGuid == Guid.Empty)
            { return false; }
            return true;
        }

        public static void AssertIsValid(this RevisionData revisionData)
        {
            if (!IsValid(revisionData))
            { throw new InvalidOperationException("The RevisionData instance is null or invalid."); }
        }

        #endregion
    }
}